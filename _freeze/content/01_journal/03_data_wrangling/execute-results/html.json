{
  "hash": "d5b9797e82cd8f476740c61e45194ec7",
  "result": {
    "markdown": "---\ntitle: \"Data Wrangling\"\nauthor: \"Sajjad Karami\"\n---\n\n\n\n**Data Wrangling:**\n\n# Code:\n\n\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-1_2914b5faaa0f9b8d9054dae101fdf5e1'}\n\n```{.r .cell-code}\nlibrary(vroom)\nlibrary(data.table)\nlibrary(tidyverse)\n\ncol_types <- list(\n  id = col_character(),\n  type = col_character(),\n  number = col_character(),\n  country = col_character(),\n  date = col_date(\"%Y-%m-%d\"),\n  abstract = col_character(),\n  title = col_character(),\n  kind = col_character(),\n  num_claims = col_double(),\n  filename = col_character(),\n  withdrawn = col_double()\n)\n\npatent_tbl <- vroom(\n  file       = \"Patent_data_reduced/patent.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The following named parsers don't match the column names: type,\n#> number, country, abstract, title, kind, filename, withdrawn\n```\n:::\n\n```{.r .cell-code}\npatent_assignee_tbl <- vroom(\n  file       = \"Patent_data_reduced/patent_assignee.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The following named parsers don't match the column names: id, type,\n#> number, country, date, abstract, title, kind, num_claims, filename, withdrawn\n```\n:::\n\n```{.r .cell-code}\nassignee_tbl <- vroom(\n  file       = \"Patent_data_reduced/assignee.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The following named parsers don't match the column names: number,\n#> country, date, abstract, title, kind, num_claims, filename, withdrawn\n```\n:::\n\n```{.r .cell-code}\nuspc_tbl <- vroom(\n  file       = \"Patent_data_reduced/uspc.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: The following named parsers don't match the column names: id, type,\n#> number, country, date, abstract, title, kind, num_claims, filename, withdrawn\n```\n:::\n\n```{.r .cell-code}\nsetDT(patent_tbl)\n\nsetDT(assignee_tbl)\n\nsetDT(patent_assignee_tbl)\n\nsetDT(uspc_tbl)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: One or more parsing issues, call `problems()` on your data frame for details,\n#> e.g.:\n#>   dat <- vroom(...)\n#>   problems(dat)\n```\n:::\n\n```{.r .cell-code}\nclass(assignee_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"data.table\" \"data.frame\"\n```\n:::\n\n```{.r .cell-code}\ncolnames(assignee_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"id\"           \"type\"         \"organization\"\n```\n:::\n\n```{.r .cell-code}\nsetnames(assignee_tbl, \"id\", \"assignee_id\")\n\ncombined_data_1 <- merge(x = assignee_tbl, y = patent_assignee_tbl,by    = \"assignee_id\")\n\n\n\n\n\ncolnames(patent_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"id\"         \"date\"       \"num_claims\"\n```\n:::\n\n```{.r .cell-code}\nsetnames(patent_tbl, \"id\", \"patent_id\")\n\ncombined_data_2 <- merge(x = combined_data_1, y = patent_tbl, by = \"patent_id\")\n\n\n\n\n\nuspc_tbl[, patent_id := as.character(patent_id)]\ncombined_data_3 <- merge(x = uspc_tbl, y = combined_data_1, by = \"patent_id\")\n\n\n\n\n\n# First challenge\n\nsetDT(combined_data_1)\n\npatent_counts <- combined_data_1[, .(n_patents = .N), by = .(assignee_id, organization)][order(-n_patents)]\n\ntop_10_patent_holders <- patent_counts[1:10]\n\nview(top_10_patent_holders)\n\n\n# Second challenge\n\naugust_data <- combined_data_2[month(date) == 8 & year(date) == 2014]\n\npatent_counts <- august_data[, .(num_patents = .N), by = organization]\n\ntop_10 <- patent_counts[order(-num_patents)][1:10]\n\nas.data.table(top_10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"organization\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"num_patents\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"International Business Machines Corporation\",\"2\":\"718\"},{\"1\":\"Samsung Electronics Co., Ltd.\",\"2\":\"524\"},{\"1\":\"Canon Kabushiki Kaisha\",\"2\":\"361\"},{\"1\":\"Microsoft Corporation\",\"2\":\"337\"},{\"1\":\"Sony Corporation\",\"2\":\"269\"},{\"1\":\"Google Inc.\",\"2\":\"240\"},{\"1\":\"QUALCOMM Incorporated\",\"2\":\"223\"},{\"1\":\"Apple Inc.\",\"2\":\"222\"},{\"1\":\"Kabushiki Kaisha Toshiba\",\"2\":\"213\"},{\"1\":\"LG Electronics Inc.\",\"2\":\"211\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\nview(top_10)\n\n# Third challenge\n\n\npatent_counts <- combined_data_3[, .(num_patents = .N), by = organization]\n\ntop_10_companies <- patent_counts[order(-num_patents)][1:10]\n\ntop_10_patents <- combined_data_3[organization %in% top_10_companies$organization]\n\ntech_counts <- top_10_patents[, .(num_patents = .N), by = mainclass_id]\n\ntop_5_tech_classes <- tech_counts[order(-num_patents)][1:5]\n\nview(top_5_tech_classes)\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}