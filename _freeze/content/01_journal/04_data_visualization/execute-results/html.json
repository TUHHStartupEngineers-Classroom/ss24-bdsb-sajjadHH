{
  "hash": "ab1a5811d7e180aba7ba36d634800da0",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Sajjad Karami\"\n---\n\n\n\n**Data Visualization:**\n\n# Code:\n## Mapping the time course of the cumulative Covid-19 cases\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_1e518237ad02f56db0d2ea46327506ac'}\n\n```{.r .cell-code}\nlibrary(ggrepel)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Loading required package: ggplot2\n```\n:::\n\n```{.r .cell-code}\nlibrary(scales)\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'lubridate'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> The following objects are masked from 'package:base':\n#> \n#>     date, intersect, setdiff, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr   1.1.2     ✔ stringr 1.5.0\n#> ✔ forcats 1.0.0     ✔ tibble  3.2.1\n#> ✔ purrr   1.0.1     ✔ tidyr   1.3.0\n#> ✔ readr   2.1.4\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ readr::col_factor() masks scales::col_factor()\n#> ✖ purrr::discard()    masks scales::discard()\n#> ✖ dplyr::filter()     masks stats::filter()\n#> ✖ dplyr::lag()        masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(maps)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'maps'\n#> \n#> The following object is masked from 'package:purrr':\n#> \n#>     map\n```\n:::\n\n```{.r .cell-code}\nlibrary(mapdata)\nlibrary(ggplot2)\n\n\n\nworld_data <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\", show_col_types = FALSE)\n\nworld_data <- world_data %>% \n  select(date, continent, location, total_cases) %>% \n  filter(!is.na(total_cases))\n\nworld_data$date <- as.Date(world_data$date)\n\ndesired_countries <- c(\"Europe\", \"France\", \"Germany\", \"Spain\", \"United Kingdom\", \"United States\")\nselected_data <- world_data %>% filter(location %in% desired_countries)\n\n# First challenge\n\nggplot(selected_data, aes(x = date, y = total_cases, color = location , group = location)) +\n  geom_line(linewidth = 1) +\n  geom_label_repel(data = selected_data %>% filter(date == max(date)), aes(label = location, x = date, y = total_cases), size = 3, box.padding = unit(0.35, \"lines\"), point.padding = unit(0.5, \"lines\"), show.legend = FALSE) +\n  labs(title = \"Covid-19 Confirmed Cases Worldwide\", subtitle = \"As of 19/04/2022\", y = \"Cumulative Cases\", x = \"Continent/Country\") +\n  scale_y_continuous(labels = scales::comma_format()) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%B '%y\") +\n  theme(plot.title = element_text(hjust = 0.5), axis.text.x = element_text(angle = 45, hjust = 1), legend.position = \"bottom\") +\n  guides(color = guide_legend(title = \" \"), shape = guide_legend(title = \"Country\", override.aes = list(size = 6))) +\n  theme(legend.title = element_text(size = 12), legend.text = element_text(size = 10))\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Second challenge\n\ncovid_data <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\",show_col_types = FALSE)\n\ncovid_data <- covid_data %>%\n  select(location, date, total_cases, total_deaths, population) %>%\n  filter(!is.na(total_cases), !is.na(total_deaths))\n\ncovid_data$mortality_rate <- covid_data$total_deaths / covid_data$population\n\nlatest_data <- covid_data %>%\n  group_by(location) %>%\n  slice_tail(n = 1)\n\nlatest_data <- latest_data %>%\n  mutate(location = case_when(\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n  )) %>%\n  distinct()\n\nworld <- map_data(\"world\")\nmap_data <- right_join(world, latest_data, by = c(\"region\" = \"location\"))\n\nplot_data <- ggplot() +\n  geom_map(data = map_data, map = map_data, aes(map_id = region, fill = mortality_rate),\n           color = \"gray\", size = 0.1) +\n  expand_limits(x = world$long, y = world$lat) +\n  scale_fill_gradient(low = \"red\", high = \"black\", name = \"Mortality Rate\",\n                      labels = scales::percent_format()) +\n  labs(title = \"Confirmed COVID-19 deaths relative to the size of the population\",\n       subtitle = \"Around 6.2 Million confirmed COVID-19 deaths worldwide\") +\n  theme_void() +\n  theme(plot.title = element_text(hjust = 0.5, size = 14, face = \"bold\"),\n        plot.subtitle = element_text(hjust = 0.5, size = 10),\n        legend.position = \"right\",\n        legend.title.align = 0.5,\n        legend.text = element_text(size = 8),\n        legend.title = element_text(size = 10),\n        panel.background = element_rect(fill = \"transparent\", color = \"white\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `linewidth` instead.\n```\n:::\n\n```{.r .cell-code}\nprint(plot_data)\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}